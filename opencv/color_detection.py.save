from imutils.object_detection import non_max_suppression
#from imutils import paths
from imutils.video import WebcamVideoStream
import imutils
import cv2
import numpy as np
import sys
import colorsys
import time

SIZE_W = 400
fpsCountMAX = 10
fpsCount = 0
t = time.clock()

lower1 = np.array([0, 100, 70],np.uint8)
upper1 = np.array([5, 255, 255],np.uint8)

lower2 = np.array([170, 100, 70],np.uint8)
upper2 = np.array([180, 255, 255],np.uint8)

#lower3 = np.array([105, 100, 70],np.uint8)
#upper3 = np.array([135, 255, 255],np.uint8)

vs = WebcamVideoStream(src=0).start()
frame = vs.read()
		
while True:
	POI = []
	POI[:] = []
	frame = vs.read() 
	frame = imutils.resize(frame, width=min(SIZE_W, frame.shape[1]))
	frame_HSV = cv2.cvtColor(frame,cv2.COLOR_BGR2HSV)

	mask1 = cv2.inRange(frame_HSV, lower1, upper1)
	mask2 = cv2.inRange(frame_HSV, lower2, upper2)
	#mask = cv2.inRange(frame_HSV, lower3, upper3)
	#mask12 = cv2.bitwise_or(mask1,mask2)
	mask = cv2.bitwise_or(mask1,mask2)
	
	kernel = np.ones((3,3),np.uint8)
	#opening = cv2.morphologyEx(mask, cv2.MORPH_CLOSE, kernel)
	#opening = cv2.morphologyEx(opening, cv2.MORPH_OPEN, kernel)
	dilate = cv2.dilate(mask,kernel,iterations = 5)

	dist = cv2.distanceTransform(dilate,cv2.cv.CV_DIST_L2,cv2.cv.CV_DIST_MASK_PRECISE)
	cv2.normalize(dist,dist,alpha = 0.0, beta = 1.0, norm_type=cv2.NORM_MINMAX)
	
	#POI = getPOIs(opening) #points of interests
	#if not POI == []:
	#	center = getCenter(POI)

	center = (int(frame.shape[0]/2),int(frame.shape[1]/2))
	trash1,trash2,trash3,center = cv2.minMaxLoc(dist)

	cv2.line(frame,(center[0]-20,center[1]),(center[0]+20,center[1]),(0,255,0),2)
	cv2.line(frame,(center[0],center[1]-20),(center[0],center[1]+20),(0,255,0),2)
	cv2.line(frame,(center[0],center[1]),(int(frame.shape[0]/2),int(frame.shape[0]/2)),(255,0,0),2)
	
	cv2.line(dist,(center[0]-20,center[1]),(center[0]+20,center[1]),255,2)
	cv2.line(dist,(center[0],center[1]-20),(center[0],center[1]+20),255,2)
	cv2.line(dist,(center[0],center[1]),(int(frame.shape[0]/2),int(frame.shape[0]/2)),255,2)

	#cv2.imshow('orginal', frame)
	#cv2.imshow('dist', dist)
	#cv2.moveWindow('orginal', 0, 0)
	#cv2.moveWindow('dist',1000, 0)
	if fpsCount <= fpsCountMAX:
		fpsCount += 1
	else:
		dt = time.clock()-t
		print "FPS: {0}" .format(fpsCount/float(dt))
		fpsCount = 0
		t = time.clock()

	#if cv2.waitKey(10) & 0xFF == ord('q'):
        #	break
	
video_capture.release()
cv2.destroyAllWindows()



#def getPOIs(frame):
#	POI = []
#	POI[:] = []
#	for row in xrange(frame.shape[0]):
#		for col in xrange(frame.shape[1]):
#			if frame.item(row,col) >= 200:
#				POI.append((row,col))
#	return POI

#def getCenter(frame):
#	cx = 0
#	cy = 0
#	d = float(len(frame))
#	for f in frame:
#		cx += f[0]
#		cy += f[1]
#	return (int(cx/d),int(cy/d))
